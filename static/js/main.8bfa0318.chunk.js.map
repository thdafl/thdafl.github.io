{"version":3,"sources":["Components/SearchItem.js","Components/SearchBar.js","App.js","serviceWorker.js","index.js"],"names":["SearchItem","_ref","title","thumbnail","infoLink","publisher","authors","react_default","a","createElement","Card_default","style","styles","card","display","position","width","height","flex","alignItems","justifyContent","maxWidth","maxHeight","alt","src","CardContent_default","flexDirection","flexWrap","toString","Button_default","variant","color","disabled","href","target","defaultProps","flexBasis","backgroundColor","margin","SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onFormSubmit","e","preventDefault","stopPropagation","onSubmit","state","value","onChange","setState","_this$props","classes","loading","ready","Paper_default","elevation","padding","Input_default","input","fullWidth","type","Divider_default","divider","IconButton_default","aria-label","ChevronRight_default","loadIndicator","root","load","CircularProgress_default","React","Component","textAlign","withStyles","endpoint","App","searchRequest","trim","timerId","setTimeout","alert","timer","fetch","then","res","json","totalItems","clearTimeout","results","items","map","item","info","volumeInfo","imageLinks","bookResults","book","index","Components_SearchItem","key","className","Components_SearchBar","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.8bfa0318.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\n\nconst SearchItem = ({ title, thumbnail, infoLink, publisher, authors }) => {\n  return (\n    <Card style={styles.card}>\n      <div\n        style={{\n          display: \"flex\",\n          position: \"absolute\",\n          width: \"100%\",\n          height: \"100%\"\n        }}\n      >\n        <div\n          style={{\n            width: \"40%\",\n            height: \"100%\",\n            flex: \"1\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"flex-start\"\n          }}\n        >\n          <img\n            style={{\n              maxWidth: \"100%\",\n              maxHeight: \"100%\"\n            }}\n            alt=\"\"\n            src={thumbnail}\n          />\n        </div>\n        <CardContent\n          style={{\n            width: \"60%\",\n            height: \"100%\",\n            flex: 2,\n            display: \"flex\",\n            flexDirection: \"column\",\n            flexWrap: \"wrap\",\n            alignItems: \"center\",\n            justifyContent: \"flex-start\",\n          }}\n        >\n          <p>{title}</p>\n          <p>\n            <i>{authors ? authors.toString() : \"\"}</i>\n          </p>\n          <p>\n            <b>{publisher}</b>\n          </p>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={infoLink ? false : true}\n            href={infoLink}\n            target=\"_blank\"\n          >\n            More Details\n          </Button>\n        </CardContent>\n      </div>\n    </Card>\n  );\n};\n\nSearchItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  thumbnail: PropTypes.string,\n  infoLink: PropTypes.string,\n  publisher: PropTypes.string,\n  authors: PropTypes.array\n};\n\nSearchItem.defaultProps = {\n  thumbnail:\n    \"http://images.clipartpanda.com/open-book-outline-clipart-dcreMKagi.svg\"\n};\n\nconst styles = {\n  card: {\n    flex: 1,\n    height: 340,\n    flexBasis: \"45%\",\n    backgroundColor: \"#e8e8e4\",\n    margin: \"20px\",\n    position: \"relative\"\n  }\n};\n\nexport default SearchItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Input from \"@material-ui/core/Input\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Divider from \"@material-ui/core/Divider\";\nimport DirectionsIcon from \"@material-ui/icons/ChevronRight\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\"\n    };\n  }\n\n  onFormSubmit = e => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    this.props.onSubmit(this.state.value);\n  };\n\n  onChange = e => {\n    this.setState({ value: e.target.value });\n  };\n\n  render() {\n    const { classes, loading } = this.props;\n    const { value } = this.state;\n\n    const ready = (\n      <form\n        onSubmit={this.onFormSubmit}\n        style={{\n          width: \"30%\",\n          height: \"50px\"\n        }}\n      >\n        <Paper\n          elevation={1}\n          style={{\n            padding: \"2px 4px\",\n            display: \"flex\",\n            height: \"50px\",\n            flexDirection: \"row\"\n          }}\n        >\n          <Input\n            classes={{\n              input: classes.input\n            }}\n            fullWidth={true}\n            type=\"text\"\n            value={value}\n            onChange={this.onChange}\n          />\n          <Divider style={styles.divider} />\n          <IconButton\n            type=\"submit\"\n            style={{}}\n            color=\"primary\"\n            aria-label=\"Directions\"\n          >\n            <DirectionsIcon />\n          </IconButton>\n        </Paper>\n      </form>\n    );\n\n    const loadIndicator = (\n      <Paper elevation={1} classes={{ root: classes.load }}>\n        <div>\n          <CircularProgress color=\"secondary\" />\n        </div>\n      </Paper>\n    );\n\n    return loading ? loadIndicator : ready;\n  }\n}\n\nconst styles = {\n  input: {\n    flex: 1,\n    textAlign: \"center\"\n  },\n  divider: {\n    width: 1,\n    height: \"100%\"\n  },\n  load: {\n    padding: \"2px 4px\",\n    display: \"flex\",\n    width: \"30%\",\n    height: \"50px\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n};\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(SearchBar);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport SearchItem from \"./Components/SearchItem\";\nimport SearchBar from \"./Components/SearchBar\";\n\nconst endpoint = \"https://www.googleapis.com/books/v1/volumes?q=\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      results: [],\n      timer: 0\n    };\n  }\n\n  searchRequest = title => {\n    if (title.trim()) {\n      this.setState({ loading: true });\n\n      var timerId = setTimeout(() => {\n        alert(\"Your search is taking an abnormally long time, please check your connection.\");\n        this.setState({\n          loading: false\n        });\n      }, 10000);\n\n      this.setState({ timer: timerId }, () => {\n        fetch(endpoint + title)\n          .then(res => res.json())\n          .then(json => {\n            if(json.totalItems===0){\n                clearTimeout(this.state.timer);\n                alert(\"Couldn't find any results, please try another search term\");\n                this.setState({\n                loading: false\n                });\n            }\n            const results = json.items.map(item => {\n              const info = item.volumeInfo;\n              if (info) {\n                return {\n                  authors: info.authors || null,\n                  thumbnail: info.imageLinks\n                    ? info.imageLinks.thumbnail || null\n                    : null,\n                  publisher: info.publisher || null,\n                  title: info.title || null,\n                  infoLink: info.infoLink || null\n                };\n              } else {\n                return null;\n              }\n            });\n            this.setState(\n              {\n                loading: false,\n                results\n              },\n              () => {\n                clearTimeout(this.state.timer);\n              }\n            );\n          });\n      });\n    } else {\n      alert(\"Please enter a valid search\");\n    }\n  };\n\n  render() {\n    const bookResults = this.state.results.map((book, index) => {\n      return (\n        <SearchItem\n          key={index}\n          title={book.title}\n          thumbnail={book.thumbnail}\n          infoLink={book.infoLink}\n          authors={book.authors}\n          publisher={book.publisher}\n        />\n      );\n    });\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div\n            style={{\n              margin: 20\n            }}\n          >\n            Book Finder\n          </div>\n          <SearchBar\n            loading={this.state.loading}\n            onSubmit={this.searchRequest}\n          />\n          <div\n            style={{\n              width: \"90%\",\n              display: \"flex\",\n              flexWrap: \"wrap\"\n            }}\n          >\n            {bookResults}\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}